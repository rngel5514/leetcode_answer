class Solution:
    """
    Given an array of non-negative integers, you are initially positioned at the first index of the array.

    Each element in the array represents your maximum jump length at that position.

    Determine if you are able to reach the last index.
    """
    def canJump(self, nums: List[int]) -> bool:
        cost =  len(nums)-1
        if cost == 0:
            return True
        nums[cost] = 1
        """
        filter Jump
        """
        def filterJump(nums):
            init = False
            for i in range(len(nums)-1,-1,-1):
                if nums[i] == 0:
                    if init == False:
                        index = 1
                        init = True
                    else:
                        index += 1
                else:
                    if init:
                        if nums[i] <= index:
                            index+= 1
                            nums[i] = 0
                        else:
                            index = 0
                            init = False
        filterJump(nums) 
        def jumpTmp(nums,seq,cost):
            print("seq:"+str(seq))
            if nums[seq] == 0:
                return False
            if nums[seq] >= cost:
                return True
            else:
                jump_tmp = nums[seq]
                while(jump_tmp!=0):
                    if(jumpTmp(nums,seq+jump_tmp,cost-jump_tmp)):
                        return True
                    jump_tmp -= 1
                return False
        return jumpTmp(nums,0,cost)
                                
