"""
84. Largest Rectangle in Histogram

Given n non-negative integers representing the histogram's bar height

where the width of each bar is 1, find the area of largest rectangle in the histogram.
"""
class Solution:
    def largestRectangleArea(self, heights: List[int]) -> int:
        stack = []
        re = 0
        for list_seq in range(len(heights)):
            if stack == [] or stack[-1][0] <= heights[list_seq]:
                stack.append((heights[list_seq],list_seq))
                continue
            #stack[-1] > heights[list_seq]
            #calculate
            for i in range(len(stack)-1,-1,-1):
                if stack[i][0] <= heights[list_seq]:
                    break
                if i != 0:
                    re = max(re,stack[i][0] * (list_seq - stack[i-1][1] -1))
                else:
                    re = max(re,stack[i][0] * (list_seq))
            while stack != [] and stack[-1][0] > heights[list_seq]:
                stack.pop()
            stack.append((heights[list_seq],list_seq))
        if stack != []:
            for i in range(len(stack)-1,-1,-1):
                if i != 0 :
                    re = max(re,stack[i][0] * (len(heights) - stack[i-1][1] -1))
                else:
                    re = max(re,stack[i][0] * (len(heights)))
        return re
