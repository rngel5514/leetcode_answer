class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        """
        算法思路:
        第一遍处理成dict_pos和dict_neg
        "2":2(1,2)
        对每一个dict如果等于2则组合的时候包含自身
        如果不，则不含自身
        """
        nums_pos = []
        nums_neg = []
        nums_zero = []
        results = []
        for tmp in nums:
            if(tmp > 0):
                nums_pos.append(tmp)
            elif(tmp < 0):
                nums_neg.append(tmp)
            else:
                nums_zero.append(tmp)
        
        
        print(results)
        if(len(nums_zero) > 0 ):
            for tmp in set(nums_pos):
                if (0-tmp) in nums_neg:
                    results.append([tmp,0,(0-tmp)])
        if(len(nums_zero) >= 3):
            results.append([0,0,0])
        return results
